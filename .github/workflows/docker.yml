name: docker-image
on:
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

env:
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: dreamer2368/github_action_test
  DOCKERPATH: docker

jobs:
  ghcr:
    runs-on: ubuntu-latest
    name: "github container registry"
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Echo github actor
      run: echo "github.actor= ${{ github.actor }}"
    - uses: Ana06/get-changed-files@v2.2.0       
      id: files
    - name: DockerPATH - check if files in docker path changed
      if: contains(steps.files.outputs.all,env.DOCKERPATH) || contains(steps.files.outputs.all,'docker.yml')
      run: |
        echo "CI container needs rebuilding..."
        echo "CI_NEEDS_REBUILD=true" >> $GITHUB_ENV
    - name: Log into registry ${{ env.REGISTRY }}
      if: env.CI_NEEDS_REBUILD
      uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}
    - name: build docker image
      if: env.CI_NEEDS_REBUILD
      run: |
        echo "container tag= ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
        docker build --build-arg njobs=2 --file ${{ env.DOCKERPATH }}/Dockerfile --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest .
    - name: push docker image
      run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
  docker-ci:
    runs-on: ubuntu-latest
    name: "docker env"
    steps:
      - name: test command
        run: echo "docker-ci command"
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: Ana06/get-changed-files@v2.2.0       
        id: files
      - name: DockerPATH configuration
        run: echo "DOCKERPATH=$DOCKERPATH"
      - name: DockerPATH - check if files in docker path changed
        if: contains(steps.files.outputs.all,env.DOCKERPATH) || contains(steps.files.outputs.all,'docker.yml')
        run: |
          echo "CI container needs rebuilding..."
          echo "CI_NEEDS_REBUILD=true" >> $GITHUB_ENV
      - name: Docker Image - Set up QEMU
        if: env.CI_NEEDS_REBUILD
        uses: docker/setup-qemu-action@v2
      - name: Docker Image - Setup Buildx
        if: env.CI_NEEDS_REBUILD
        uses: docker/setup-buildx-action@v2
      - name: Docker Image - Dockerhub login
        if: env.CI_NEEDS_REBUILD
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        if: env.CI_NEEDS_REBUILD
        uses: docker/metadata-action@v4
        with:
          images: dreamer2368/github_action_test
          tags: type=sha
          flavor: latest=true
      - name: Build Container motd
        if: env.CI_NEEDS_REBUILD
        run: |
          echo "#!/bin/bash" > ${{env.DOCKERPATH}}/motd.sh
          echo "echo --------------------------" >> ${{env.DOCKERPATH}}/motd.sh
          echo "echo TPS/CI Development Container"  >> ${{env.DOCKERPATH}}/motd.sh
          echo "echo \"Revision: `echo ${GITHUB_SHA} | cut -c1-8`\"" >> ${{env.DOCKERPATH}}/motd.sh
          echo "echo --------------------------" >> ${{env.DOCKERPATH}}/motd.sh
          chmod 755 ${{env.DOCKERPATH}}/motd.sh
          cat ${{env.DOCKERPATH}}/motd.sh
      - name: Docker Image - Build and push
        if: env.CI_NEEDS_REBUILD
        uses: docker/build-push-action@v3
        with:
          push: true
          context: ${{ env.DOCKERPATH }}
          tags: ${{ steps.meta.outputs.tags }}
